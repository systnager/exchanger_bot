from requests.exceptions import ReadTimeout, ConnectionError
import json
import time

import telebot
from telebot import types

from datetime import datetime

ADMIN_ID_LIST = ['616356243', '1760269999']
IS_DEBUG = True
AUTHENTICATION_TOKEN = '6392565799:AAFzQy4uesuvZ-5gOhCcrvhYr_xdSalYqI8' if IS_DEBUG else '6037063888:AAHVm-IjLif82Wt' \
                                                                                         '-CNykhrRU3VsJqtecjYI'
CHAT_URL = 'https://t.me/+vQm5jYWTWo1iZmMy'
bot = telebot.TeleBot(AUTHENTICATION_TOKEN)


def print_log(log_text):
    print(f'{datetime.now()} {log_text}')


def save_config(config):
    with open("config.json", "w") as config_file:
        json.dump(config, config_file, indent=4)


def get_config():
    with open("config.json", "r") as config_file:
        return json.load(config_file)


def set_payeer_usd_to_uah_course(_course):
    config = get_config()
    config["payeer_usd_to_uah"] = _course
    save_config(config)


def set_payeer_account(payeer_account):
    config = get_config()
    config["payeer_account"] = payeer_account
    save_config(config)


def home(message):
    markup = types.ReplyKeyboardMarkup(row_width=2)
    exchange_payeer_usd_to_uah_button = types.KeyboardButton('Payeer USD\n' + '–ö–∞—Ä—Ç–∞ UAH')
    course_button = types.KeyboardButton('–ö—É—Ä—Å –æ–±–º—ñ–Ω—É')
    support_button = types.KeyboardButton('–ü—ñ–¥—Ç—Ä–∏–º–∫–∞')

    markup.add(
        exchange_payeer_usd_to_uah_button,
        course_button,
        support_button,
    )

    bot.send_message(message.chat.id, '–í–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π!', reply_markup=markup)


def exchange_payeer_usd_to_uah(message):
    markup = types.ReplyKeyboardMarkup(row_width=1)
    home_button = types.KeyboardButton('–ì–æ–ª–æ–≤–Ω–∞')

    config = get_config()
    markup.add(
        home_button,
    )

    bot.send_message(message.chat.id,
                     f'‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–£–í–ê–ì–ê‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è\n–£ —Ä–∞–∑—ñ –Ω–µ–≤–∏–∫–æ–Ω–∞–Ω–Ω—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è –º–∞—î –ø—Ä–∞–≤–æ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏—Ç–∏ –í–∞–º –æ–±–º—ñ–Ω')
    bot.send_message(message.chat.id,
                     f'–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å—É–º—É –¥–ª—è –æ–±–º—ñ–Ω—É –Ω–∞ {config["payeer_account"]} –≤—ñ–¥ 0.2$ –∑ –∫–æ–º–µ–Ω—Ç–∞—Ä–µ–º: ' +
                     f'–í–∞—à–∞_–∫–∞—Ä—Ç–∞ –í–∞—à_–Ω—ñ–∫')
    bot.send_message(message.chat.id, f'–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Å–∫—Ä—ñ–Ω –ø–µ—Ä–µ–∫–∞–∑—É –≤ –±–æ—Ç –∑ –∫–æ–º–µ–Ω—Ç–∞—Ä–µ–º –ø—ñ–¥ –Ω–∏–º. ' +
                     f'–õ–∏—à–µ –ø—ñ—Å–ª—è —Ü—å–æ–≥–æ –∑–∞—è–≤–∫—É –±—É–¥–µ –ø—Ä–∏–π–Ω—è—Ç–æ –Ω–∞ —Ä–æ–∑–≥–ª—è–¥',
                     reply_markup=markup)


def course(message):
    markup = types.ReplyKeyboardMarkup(row_width=1)
    current_date = datetime.now().strftime('%Y.%m.%d')
    home_button = types.KeyboardButton('–ì–æ–ª–æ–≤–Ω–∞')

    config = get_config()

    markup.add(
        home_button,
    )
    bot.send_message(message.chat.id, f'–ö—É—Ä—Å –Ω–∞ {current_date}\n' +
                     f'1 Payeer USD ‚û°Ô∏è {config["payeer_usd_to_uah"]} UAH', reply_markup=markup)


def support(message):
    markup = types.ReplyKeyboardMarkup(row_width=1)
    home_button = types.KeyboardButton('–ì–æ–ª–æ–≤–Ω–∞')

    markup.add(
        home_button,
    )
    bot.send_message(message.chat.id,
                     f'–ö–æ–Ω—Ç–∞–∫—Ç–∏ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏: @arobotok202118 —Ç–∞ @systnager', reply_markup=markup)


@bot.message_handler(commands=['start'])
def start(message):
    print_log(f'{message.chat.id} run bot')
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç. –ú–∏ —Ä–∞–¥—ñ, —â–æ —Ç–∏ –∑–∞–≤—ñ—Ç–∞–≤ –¥–æ –Ω–∞—Å üôÇ\n–ù–∞—à —á–∞—Ç: {CHAT_URL}')
    home(message)


@bot.message_handler(func=lambda message: True)
def handle_exchange_button_click(message):
    if str(message.chat.id) in ADMIN_ID_LIST:
        if '–ü–µ—î—Ä –¥–ª—è –æ–±–º—ñ–Ω—É:' in message.text and len(message.text) > 16:
            set_payeer_account(message.text.split(':')[1].replace(' ', ''))
            bot.send_message(message.chat.id, '–í–∏–∫–æ–Ω–∞–Ω–æ')
        elif '–ö—É—Ä—Å –∑ –ø–µ—î—Ä–∞ –¥–æ–ª–∞—Ä –Ω–∞ –∫–∞—Ä—Ç—É –≥—Ä–∏–≤–Ω—é:' in message.text and len(message.text) > 34:
            set_payeer_usd_to_uah_course(message.text.split(':')[1].replace(' ', ''))
            bot.send_message(message.chat.id, '–í–∏–∫–æ–Ω–∞–Ω–æ')

    if message.text == '–ì–æ–ª–æ–≤–Ω–∞':
        home(message)
    elif message.text == 'Payeer USD\n' + '–ö–∞—Ä—Ç–∞ UAH':
        exchange_payeer_usd_to_uah(message)
    elif message.text == '–ö—É—Ä—Å –æ–±–º—ñ–Ω—É':
        course(message)
    elif message.text == '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞':
        support(message)


@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    photo = message.photo[-1]
    photo_id = photo.file_id
    chat_id = -993312734 if IS_DEBUG else -1001749858927
    markup = types.ReplyKeyboardMarkup(row_width=1)
    home_button = types.KeyboardButton('–ì–æ–ª–æ–≤–Ω–∞')

    markup.add(
        home_button,
    )
    if message.caption:
        bot.send_photo(chat_id, photo_id, caption=f'id: {message.chat.id}\n{message.caption}')
        bot.send_message(message.chat.id, f'–ó–∞—è–≤–∫—É –ø—Ä–∏–π–Ω—è—Ç–æ. –û–±–º—ñ–Ω –≤—ñ–¥–±—É–¥–µ—Ç—å—Å—è –ø—Ä–æ—Ç—è–≥–æ–º 48 –≥–æ–¥–∏–Ω‚ùóÔ∏è',
                         reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '–í–∏–∫–æ–Ω—É–π—Ç–µ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é‚ùóÔ∏è')


def main():
    bot.polling()


if __name__ == '__main__':
    while True:
        try:
            main()
        except (ReadTimeout, ConnectionError):
            print_log("Error with Internet connection")
            time.sleep(1)
            continue
